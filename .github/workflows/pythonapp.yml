# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: python_app

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  run_tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v1
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Test with pytest
      run: |
        python tests.py
        
  build_and_pub:
    needs: [run_tests]
    runs-on: [ubuntu-latest]
    env:
      LOGIN: ${{ secrets.DOCKER_LOGIN }}
      NAME: ${{ secrets.DOCKER_NAME }}
    steps:
      - name: Login to docker.io
        # Сначала мы логинимся в docker.io
        run:  echo ${{ secrets.DOCKER_PWD }} | docker login -u ${{ secrets.DOCKER_LOGIN }} --password-stdin
          # Чекаутим код
      - uses: actions/checkout@master
      - name: Build image
          # Собираем image и называем его так как указано в hub.docker т.е. login/repository:version
        run: docker build -t $LOGIN/$NAME:${{ github.sha }} -f Dockerfile .
      - name: echo
        run: echo ${{ github.sha }}
      - name: Push image to docker.io
          # Пушим образ в registry
        run: docker push $LOGIN/$NAME:${{ github.sha }}
      - name: Gitlab Hook
        # Пушим образ в registry
        run: |
          curl -v --request PUT --header 'PRIVATE-TOKEN: ${{ secrets.GITLAB_TOKEN }}' \
          --header "Content-Type: application/json" \
          --data '{"branch": "dev", "content": "repository: ballian/microflask:${{ github.sha }}", "commit_message": "change"}' \ 
          "https://gitlab.suitup.fun/api/v4/projects/31/repository/files/repo-ivan%2Eyaml"
